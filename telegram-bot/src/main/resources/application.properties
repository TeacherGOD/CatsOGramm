spring.datasource.url=jdbc:postgresql://localhost:5432/cat_tg
spring.datasource.username=postgres
spring.datasource.password=1
spring.jpa.hibernate.ddl-auto=update

cat.service.url=http://localhost:8080
cat.service.files-url=${cat.service.url}/files/

spring.datasource.driver-class-name=org.postgresql.Driver

# JPA настройки
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# Настройка порта
server.port=8081

bot.token=7563435916:AAFWIz4OiUAV5LwB5MRI-NZKNebSCv6m4xg
bot.name=CatPhotoFobia



spring.kafka.bootstrap-servers=localhost:9092
tg.bot.group.id=tgBot

spring.kafka.server.producer.topic.add=addCat
spring.kafka.server.producer.topic.getMy=getMyCats
spring.kafka.server.producer.topic.info=catInfo
spring.kafka.server.producer.topic.random=randomCat
spring.kafka.server.producer.topic.reaction=makeReaction
spring.kafka.server.producer.topic.delete=deleteCat
spring.kafka.server.producer.topic.count=countCatRequest

spring.kafka.server.consumer.topic.count=countCatAnswer
spring.kafka.server.consumer.topic.catsPage=catsPage
spring.kafka.server.consumer.topic.cat.details=catDetails
spring.kafka.server.consumer.topic.cat.details.random=catDetailsRandom